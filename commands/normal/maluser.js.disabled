/* This command has been removed because it is extremely ineffecient and exploitable.
The code will still be avaliable for reference or anyone who dares parse 226k lines of XML

var xml2js = require('xml2js'),
	superagent = require('superagent');

module.exports = {
	desc: "Get statistcs for a user on MAL.",
	help: "Get statistcs for a user on MyAnimeList. To get manga stats add --manga to the end.",
	usage: "<user> [--manga]",
	aliases: ['malstats'],
	cooldown: 4,
	task(bot, msg, suffix) {
		if (!suffix)
			return 'wrong usage';
		let manga = false;
		if (/\-\-manga$/i.test(suffix)) {
			manga = true;
			suffix = suffix.replace(/ *\-\-manga$/i, '');
		}
		superagent.get(`http://myanimelist.net/malappinfo.php?u=${suffix}&status=all&type=${manga ? 'manga' : 'anime'}`)
			.buffer()
			.end((error, response) => {
				if (!error && response.status === 200) {
					xml2js.parseString(response.text, (_error, result) => {
						if (result.myanimelist.myinfo === undefined)
							return bot.createMessage(msg.channel.id, result.myanimelist.error);
						result = result.myanimelist.myinfo[0];
						if (manga === false)
							bot.createMessage(msg.channel.id, `\`\`\`ruby\n# MAL anime stats for ${result.user_name}\nWatching: ${result.user_watching}\nCompleted: ${result.user_completed}\nOn Hold: ${result.user_onhold}\nDropped: ${result.user_dropped}\nPlan To Watch: ${result.user_plantowatch}\nDays Spent: ${result.user_days_spent_watching}\`\`\``);
						else
							bot.createMessage(msg.channel.id, `\`\`\`ruby\n# MAL manga stats for ${result.user_name}\nReading: ${result.user_reading}\nCompleted: ${result.user_completed}\nOn Hold: ${result.user_onhold}\nDropped: ${result.user_dropped}\nPlan To Read: ${result.user_plantoread}\nDays Spent: ${result.user_days_spent_watching}\`\`\``);
					});
				} else
					bot.createMessage(msg.channel.id, `Error: Status code ${error === null ? response.status : error.status}`);
			});
	}
};*/
